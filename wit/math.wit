package jcbhmr:ecmascript@16.0.0;

interface math {
  get-e: func() -> f64;
  get-ln10: func() -> f64;
  get-ln2: func() -> f64;
  get-log10-e: func() -> f64;
  get-log2-e: func() -> f64;
  get-pi: func() -> f64;
  get-sqrt12: func() -> f64;
  get-sqrt2: func() -> f64;
  abs: func(x: f64) -> f64;
  acos: func(x: f64) -> f64;
  acosh: func(x: f64) -> f64;
  asin: func(x: f64) -> f64;
  asinh: func(x: f64) -> f64;
  atan: func(x: f64) -> f64;
  atan2: func(y: f64, x: f64) -> f64;
  atanh: func(x: f64) -> f64;
  cbrt: func(x: f64) -> f64;
  ceil: func(x: f64) -> f64;
  clz32: func(x: u32) -> u32;
  cos: func(x: f64) -> f64;
  cosh: func(x: f64) -> f64;
  exp: func(x: f64) -> f64;
  expm1: func(x: f64) -> f64;
  floor: func(x: f64) -> f64;
  fround: func(x: f64) -> f32;
  hypot: func(args: list<f64>) -> f64;
  imul: func(a: u32, b: u32) -> u32;
  log: func(x: f64) -> f64;
  log10: func(x: f64) -> f64;
  log1p: func(x: f64) -> f64;
  log2: func(x: f64) -> f64;
  max: func(args: list<f64>) -> f64;
  min: func(args: list<f64>) -> f64;
  pow: func(base: f64, exponent: f64) -> f64;
  random: func() -> f64;
  round: func(x: f64) -> f64;
  sign: func(x: f64) -> f64;
  sin: func(x: f64) -> f64;
  sinh: func(x: f64) -> f64;
  sqrt: func(x: f64) -> f64;
  tan: func(x: f64) -> f64;
  tanh: func(x: f64) -> f64;
  trunc: func(x: f64) -> f64;
}